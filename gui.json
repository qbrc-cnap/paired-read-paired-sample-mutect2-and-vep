{
	"input_elements": [
		{
			"target": {
				"target_ids": ["PairedMatchedMutect2AndVepWorkflow.match_annotations"],
				"name": "sample_pairs_input",
				"handler": "single_file_input_mapping.py"
			},
			"display_element": {
				"type": "file_chooser",
				"regex_filter": ".*[\\.csv|\\.tsv|\\.xls|\\.xlsx]$",
				"label": "Tumor / Normal sample pairings:",
				"choose_multiple": false,
				"description": "Choose a tumor/normal pairing annotation file. This should have two columns, separated by a \"tab\" (tab-delimited), a \",\", or as an excel file. Please end the file with its respective suffix: .txt, .csv, .xlsx. The first column has the tumor sample's first-in-pair FASTQ filename, the second column has the tumor samples's matching normal sample - also as first-in-pair FASTQ filename.<br><br>For example, if the FASTQ files are named \"TumorSampleA_R1.fastq.gz,\" \"TumorSampleA_R2.fastq.gz,\" \"NormalSampleA_R1.fastq.gz,\" and \"NormalSampleA_R2.fastq.gz\" then the name that goes in the first column of the file is \"TumorSampleA_R1.fastq.gz,\" and the name that goes in the second column of the file is \"NormalSampleA_R1.fastq.gz.\" As so:<br><table style="width:70%"><tr><th>TumorSampleA_R1.fastq.gz</th><th>NormalSampleA_R1.fastq.gz</th></tr><tr><th>TumorSampleB_R1.fastq.gz</th><th>NormalSampleB_R1.fastq.gz</th></tr></table><br>The names of the files must match files that have been uploaded, and all samples must have its paired read FASTQ uploaded as well. This will be checked and an error returned if there are any discrepancies.<br><br>There should NOT be a column header."
			}
		},
		{
			"target": {
				"target_ids": ["PairedMatchedMutect2AndVepWorkflow.r1_files", "PairedMatchedMutect2AndVepWorkflow.r2_files"],
				"name": "input_files",
				"handler": "input_mapping.py"
			},
			"display_element": {
				"type": "file_chooser",
                "regex_filter": ".*_R[1,2].fastq.gz",
				"label": "Input files:",
				"choose_multiple": true,
				"description": "Choose input fastq-format files to analyze.  Files should end with \"_R1.fastq.gz\" or \"_R2.fastq.gz\".  Unpaired files will be ignored and NOT analyzed."
			}
        },
		{
			"target": {
				"target_ids": ["PairedMatchedMutect2AndVepWorkflow.genome", 
					"PairedMatchedMutect2AndVepWorkflow.ref_fasta",
					"PairedMatchedMutect2AndVepWorkflow.ref_fasta_index",
					"PairedMatchedMutect2AndVepWorkflow.ref_dict",
					"PairedMatchedMutect2AndVepWorkflow.ref_bwt",
					"PairedMatchedMutect2AndVepWorkflow.ref_sa",
					"PairedMatchedMutect2AndVepWorkflow.ref_amb",
					"PairedMatchedMutect2AndVepWorkflow.ref_ann",
					"PairedMatchedMutect2AndVepWorkflow.ref_pac",
					"PairedMatchedMutect2AndVepWorkflow.ref_exon_intervals",
					"PairedMatchedMutect2AndVepWorkflow.dbsnp",
					"PairedMatchedMutect2AndVepWorkflow.dbsnp_index",
					"PairedMatchedMutect2AndVepWorkflow.known_indels",
					"PairedMatchedMutect2AndVepWorkflow.known_indels_index",
					"PairedMatchedMutect2AndVepWorkflow.gnomad",
					"PairedMatchedMutect2AndVepWorkflow.gnomad_index",
					"PairedMatchedMutect2AndVepWorkflow.contig_list",
					"PairedMatchedMutect2AndVepWorkflow.vep_species",
					"PairedMatchedMutect2AndVepWorkflow.vep_cache_tar"
				],
				"name": "genome_choice",
				"handler": "genome_mapper.py"
			},
			"display_element": {
				"type": "select",
				"label": "Reference genome",
				"description": "Choose the reference genome to use for this process.",
				"choices": [
					{
						"value": "Ensembl Homo sapiens GRCh38.95",
						"display": "Ensembl Homo sapiens GRCh38.95"
					},
					{
						"value": "Ensembl Homo sapiens GRCh37.95",
						"display": "Ensembl Homo sapiens GRCh37.95 (hg19)"
					}
				]
			}
		},
		{
			"display_element": {
				"type": "boolean_checkbox",
				"label": "Use deduplicated FASTQ",
				"description": "Please check for high diversity libraries, such as SureSelect. Lower diversity libraries, such as Haloplex, should not use deduplicted FASTQs."
			},
			"target": "PairedMatchedMutect2AndVepWorkflow.use_dedup"
		},
		{
			"target":"PairedMatchedMutect2AndVepWorkflow.output_zip_name",
			"display_element": {
				"type": "text",
				"label": "Output zip-archive name:",
				"description": "Name the output file.  Result will be a \"zip\" archive.  If you enter \"my_output\", then the results will be \"my_output.zip\"."
			}
		},
		{
			"target": "PairedMatchedMutect2AndVepWorkflow.git_repo_url",
			"display_element": {
				"type": "dynamic_hidden",
				"handler": "add_git_repo_url.py",
				"context_args": {
					"variable_name": "git_repo_url"
				}
			}
		},
		{
			"target": "PairedMatchedMutect2AndVepWorkflow.git_commit_hash",
			"display_element": {
				"type": "dynamic_hidden",
				"handler": "add_git_hash.py",
				"context_args": {
					"variable_name": "git_commit_hash"
				}
			}
		}
	]
}
