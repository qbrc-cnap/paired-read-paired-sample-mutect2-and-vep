{
	"input_elements": [
		{
			"target": {
				"target_ids": ["PairedHaplotypecallerAndVepWorkflow.r1_files", "PairedHaplotypecallerAndVepWorkflow.r2_files"],
				"name": "input_files",
				"handler": "input_mapping.py"
			},
			"display_element": {
				"type": "file_chooser",
                "regex_filter": ".*_R[1,2].fastq.gz",
				"label": "Input files:",
				"choose_multiple": true,
				"description": "Choose input fastq-format files to analyze.  Files should end with \"_R1.fastq.gz\" or \"_R2.fastq.gz\".  Unpaired files will be ignored and NOT analyzed."
			}
        },
		{
			"target": {
				"target_ids": ["PairedHaplotypecallerAndVepWorkflow.genome", 
					"PairedHaplotypecallerAndVepWorkflow.ref_fasta",
					"PairedHaplotypecallerAndVepWorkflow.ref_fasta_index",
					"PairedHaplotypecallerAndVepWorkflow.ref_dict",
					"PairedHaplotypecallerAndVepWorkflow.ref_bwt",
					"PairedHaplotypecallerAndVepWorkflow.ref_sa",
					"PairedHaplotypecallerAndVepWorkflow.ref_amb",
					"PairedHaplotypecallerAndVepWorkflow.ref_ann",
					"PairedHaplotypecallerAndVepWorkflow.ref_pac",
					"PairedHaplotypecallerAndVepWorkflow.dbsnp",
					"PairedHaplotypecallerAndVepWorkflow.dbsnp_index",
					"PairedHaplotypecallerAndVepWorkflow.known_indels",
					"PairedHaplotypecallerAndVepWorkflow.known_indels_index",
					"PairedHaplotypecallerAndVepWorkflow.contig_list",
					"PairedHaplotypecallerAndVepWorkflow.vep_species",
					"PairedHaplotypecallerAndVepWorkflow.vep_cache_tar"
				],
				"name": "genome_choice",
				"handler": "genome_mapper.py"
			},
			"display_element": {
				"type": "select",
				"label": "Reference genome",
				"description": "Choose the reference genome to use for this process.",
				"choices": [
					{
						"value": "Ensembl Homo sapiens GRCh38.95",
						"display": "Ensembl Homo sapiens GRCh38.95"
					},
					{
						"value": "Ensembl Homo sapiens GRCh37.95",
						"display": "Ensembl Homo sapiens GRCh37.95 (hg19)"
					}
				]
			}
		},
		{
			"display_element": {
				"type": "boolean_checkbox",
				"label": "Use deduplicated FASTQ",
				"description": "Please check for high diversity libraries, such as SureSelect. Lower diversity libraries, such as Haloplex, should not use deduplicted FASTQs."
			},
			"target": "PairedHaplotypecallerAndVepWorkflow.use_dedup"
		},
		{
			"target":"PairedHaplotypecallerAndVepWorkflow.output_zip_name",
			"display_element": {
				"type": "text",
				"label": "Output zip-archive name:",
				"description": "Name the output file.  Result will be a \"zip\" archive.  If you enter \"my_output\", then the results will be \"my_output.zip\"."
			}
		},
		{
			"target": "PairedHaplotypecallerAndVepWorkflow.git_repo_url",
			"display_element": {
				"type": "dynamic_hidden",
				"handler": "add_git_repo_url.py",
				"context_args": {
					"variable_name": "git_repo_url"
				}
			}
		},
		{
			"target": "PairedHaplotypecallerAndVepWorkflow.git_commit_hash",
			"display_element": {
				"type": "dynamic_hidden",
				"handler": "add_git_hash.py",
				"context_args": {
					"variable_name": "git_commit_hash"
				}
			}
		}
	]
}
